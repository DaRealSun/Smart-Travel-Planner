import {useDispatch} from "react-redux";import {useEffect} from "react";import {onAuthStateChanged} from "firebase/auth";import {auth} from "../utils/firebase";import {addUser, removeUser} from "../utils/userSlice";import appRouter from "../router/appRouter";const AuthListener = () => {    const dispatch = useDispatch();    useEffect(() => {        console.log("[AuthListener] mounted");        const unsubcribe = onAuthStateChanged(auth, (user) => {            console.log("[AuthListener] onAuthStateChanged:", user);            if (user) {                // User is signed in, see docs for a list of available properties                // https://firebase.google.com/docs/reference/js/auth.user                const {uid, email, displayName, photoURL} = user;                dispatch(addUser({uid:uid, email:email, displayName:displayName, photoURL:photoURL}));                appRouter.navigate("/browse");            } else {                // User is signed out                dispatch(removeUser())                appRouter.navigate("/")            }        });        //unsubcribe when component unmounts        return () => unsubcribe();    }, [])    return (null);};export default AuthListener;